#!/bin/bash

# Define color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Check if RustScan is installed
if ! command -v rustscan &> /dev/null; then
    echo -e "${RED}[-] RustScan is not installed. Please install RustScan and try again.${NC}"
    exit 1
fi

# Check if the correct number of arguments are provided
if [ "$#" -ne 3 ]; then
    echo -e "${YELLOW}Usage: $0 <target_ip(s)> <directory path> <speed 1-5>${NC}"
    exit 1
fi

TARGET_IP=$1
OUTPUT_DIR=$2
SPEED=$3

# Check if the directory exists, if not, create it
if [ -d "$OUTPUT_DIR" ]; then
    echo -e "${GREEN}[+] Directory already exists: $OUTPUT_DIR${NC}"
else
    echo -e "${BLUE}[+] Making Directory $OUTPUT_DIR....${NC}"
    mkdir -p "$OUTPUT_DIR"
    if [ $? -ne 0 ]; then
        echo -e "${RED}[-] Failed to create directory $OUTPUT_DIR${NC}"
        exit 1
    fi
fi

# Start the scan
echo -e "${BLUE}[+] Starting the scan for $TARGET_IP${NC}"
echo -e "${YELLOW}[+] This may take a while...${NC}"
echo -e "${BLUE}------------------------------------------------------------${NC}"
echo ""

# Run RustScan and save the output in the specified directory, suppress commandline feedback
rustscan -a $TARGET_IP -r 1-65535 -- -sVC -T $SPEED -Pn -oN ${OUTPUT_DIR}/${TARGET_IP}_nmap &> ${OUTPUT_DIR}/${TARGET_IP}_nmap

# Check if the RustScan command succeeded
if [ $? -eq 0 ]; then
    echo -e "${GREEN}[+] Scan completed successfully.${NC}"
else
    echo -e "${RED}[-] Scan failed. Please check the parameters and try again.${NC}"
fi
